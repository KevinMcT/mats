plugins {
    id 'org.springframework.boot' version '2.2.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
    amqWebConsoleWar
}

// :: Get hold of the ActiveMQ Web Console WAR file, and place it in src/main/resources before compileJava
ext.activeMqWebConsoleResource = file("src/main/resources/activemq-web-console.war")
task downloadAmqWebConsoleWar {
    inputs.files configurations.amqWebConsoleWar
    outputs.file activeMqWebConsoleResource
    doLast {
        configurations.amqWebConsoleWar.resolve().each { warFile ->
            println "Got ActiveMQ Web Console WAR: $warFile"
            println " \\- Copying to destination: ${activeMqWebConsoleResource.getAbsolutePath()}"
            activeMqWebConsoleResource << warFile.getBytes()
        }
    }
}
compileJava.dependsOn downloadAmqWebConsoleWar


// Crap from Spring Boot with Gradle 6.2
//  https://docs.gradle.org/6.2/userguide/upgrading_version_6.html#publishing_spring_boot_applications
jar {
    enabled = true
}

bootJar {
    classifier = 'application'
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-jetty')
    // Not using Vaadin for now, as Vaadin 14 evidently requires Node/NPM installed.
    // compile('com.vaadin:vaadin-spring-boot-starter:14.0.+')

    // https://mvnrepository.com/artifact/org.eclipse.jetty/apache-jsp
    compile group: 'org.eclipse.jetty', name: 'apache-jsp', version: '9.3.11.v20160721'

    // https://mvnrepository.com/artifact/javax.servlet/jstl
    compile group: 'javax.servlet', name: 'jstl', version: '1.2'

    amqWebConsoleWar("org.apache.activemq:activemq-web-console:${activeMqVersion}@war")

    // TEST

    testCompile('org.springframework.boot:spring-boot-starter-test')
}