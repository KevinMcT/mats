// From Spring Boot
buildscript {
    ext { springBootVersion = '1.4.0.RELEASE' }
    repositories { mavenCentral() }
    dependencies { classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") }
}

// The Gradle Wrapper generation task.
task wrapper(type: Wrapper) {
    gradleVersion = "4.10.2"
    // Use "-all"-version of distribution, since IntelliJ works better then..
    distributionUrl = "http://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}

// Used both in mats-test and mats-amq
ext {
    activeMqVersion = '5.15.+'
    springVersion = "4.+"
}


subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'eclipse'

    repositories { mavenCentral() }

    group = 'com.stolsvik.mats'
    version = '0.4.0'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    dependencies {
        compile 'org.slf4j:slf4j-api:1.7.+'
        testCompile 'junit:junit:4.12'
    }

    compileJava {
        options.encoding = 'UTF-8'
        options.deprecation = true
        options.incremental = true
        options.compilerArgs += ['-Xlint:all', '-Xlint:-serial', '-Werror']
    }

    project.buildDir = 'build-gradle'

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourceJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    jar {
        manifest {
            attributes 'Implementation-Title': 'MATS',
                    'Implementation-Version': version
        }
    }

    // ------------------------------------------------
    // -- Boring stuff, should be a plugin.

    task systemInformation {
        doLast {
            println "\n** Java properties [System.getProperties()], sorted:\n"
            System.properties.sort().each { k, v ->
                println("$k = $v")
            }
            println "\n** Environment [System.getenv()], sorted:\n"
            System.env.sort().each { k, v ->
                println("$k = $v")
            }
            println ''
            println "** Java Version:   " + System.getProperty("java.version")
            println "** Groovy Version: " + GroovySystem.getVersion()
            println "** Gradle Version: " + gradle.gradleVersion
        }
    }

    // Eclipse-plugin configuration
    tasks.eclipse.dependsOn(cleanEclipse)
    eclipse {
        // project { natures 'org.springsource.ide.eclipse.gradle.core.nature'; }
        classpath {
            defaultOutputDir = file('build-eclipse')
            file {
                whenMerged { classpath ->
                    // Dump the classpath entries so that we can see them
                    classpath.entries.findAll { entry ->
                        println("Entry: $entry")
                    }
                }
            }
        }
    }
}
